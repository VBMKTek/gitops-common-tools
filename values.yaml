# Common Tools Configuration
# Namespace: common-tools
# Purpose: Authentication, monitoring, logging tools for VBMKTek platform

global:
  namespace: common-tools
  environment: production
  imageRegistry: ""
  imagePullSecrets: []
  
  # Common labels for all tools
  labels:
    app.kubernetes.io/name: common-tools
    app.kubernetes.io/instance: common-tools
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: tools
    app.kubernetes.io/part-of: vbmktek-platform
    app.kubernetes.io/managed-by: helm

  # Storage classes and persistence
  storage:
    storageClass: "ssd"
    accessMode: ReadWriteOnce

# Keycloak - Identity and Access Management
keycloak:
  enabled: true
  image: "quay.io/keycloak/keycloak:23.0"
  
  service:
    type: NodePort
    port: 8080
    nodePort: 30180
    httpsPort: 8443
    httpsNodePort: 30543
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  # Environment variables for Keycloak
  env:
    KEYCLOAK_ADMIN: "admin"
    KEYCLOAK_ADMIN_PASSWORD: "changeme123"
    KC_HOSTNAME_STRICT: "false"
    KC_HOSTNAME_STRICT_HTTPS: "false"
    KC_HTTP_ENABLED: "true"
    KC_HEALTH_ENABLED: "true"
    KC_METRICS_ENABLED: "true"
    KC_DB: "postgres"
  
  # Database configuration (uses PostgreSQL from core-infra)
  database:
    host: "postgres.core-infra.svc.cluster.local"
    port: 5432
    name: "keycloak"
    username: "keycloak"
    password: "changeme"
  
  # Realm configuration
  realm:
    name: "vbmktek"
    displayName: "VBMKTek Platform"
    enabled: true

# Elasticsearch - Search and Analytics Engine
elasticsearch:
  enabled: false  # Will enable later
  image: "docker.elastic.co/elasticsearch/elasticsearch:8.11.0"
  
  service:
    type: NodePort
    port: 9200
    nodePort: 30200
    transportPort: 9300
    transportNodePort: 30300
  
  persistence:
    enabled: true
    size: 10Gi
    storageClass: "ssd"
    accessMode: ReadWriteOnce
  
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  
  env:
    discovery.type: "single-node"
    xpack.security.enabled: "false"
    bootstrap.memory_lock: "true"

# Kibana - Data Visualization
kibana:
  enabled: false  # Will enable later
  image: "docker.elastic.co/kibana/kibana:8.11.0"
  
  service:
    type: NodePort
    port: 5601
    nodePort: 30601
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  env:
    ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    SERVER_HOST: "0.0.0.0"

# Grafana - Monitoring and Observability
grafana:
  enabled: false  # Will enable later
  image: "grafana/grafana:10.2.0"
  
  service:
    type: NodePort
    port: 3000
    nodePort: 30300
  
  persistence:
    enabled: true
    size: 5Gi
    storageClass: "ssd"
    accessMode: ReadWriteOnce
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  env:
    GF_SECURITY_ADMIN_USER: "admin"
    GF_SECURITY_ADMIN_PASSWORD: "changeme"
    GF_USERS_ALLOW_SIGN_UP: "false"

# Prometheus - Metrics Collection
prometheus:
  enabled: false  # Will enable later
  image: "prom/prometheus:v2.47.0"
  
  service:
    type: NodePort
    port: 9090
    nodePort: 30090
  
  persistence:
    enabled: true
    size: 10Gi
    storageClass: "ssd"
    accessMode: ReadWriteOnce
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

# Secret Management for Common Tools
secrets:
  enabled: true
  
  # Authentication credentials
  auth:
    keycloakAdmin: "admin"
    keycloakAdminPassword: "changeme123"
    keycloakDbPassword: "changeme"
    grafanaAdmin: "admin"
    grafanaAdminPassword: "changeme"
  
  # Connection strings
  connections:
    keycloakDbUri: "postgresql://keycloak:changeme@postgres.core-infra.svc.cluster.local:5432/keycloak"
    elasticsearchUri: "http://elasticsearch:9200"
    prometheusUri: "http://prometheus:9090"
